# Alternative GNU Make workspace makefile autogenerated by Premake

ifndef config
  config=debug_win32
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),debug_win32)
  Yac_config = debug_win32

else ifeq ($(config),debug_win64)
  Yac_config = debug_win64

else ifeq ($(config),debug_linux32)
  Yac_config = debug_linux32

else ifeq ($(config),debug_linux64)
  Yac_config = debug_linux64

else ifeq ($(config),release_win32)
  Yac_config = release_win32

else ifeq ($(config),release_win64)
  Yac_config = release_win64

else ifeq ($(config),release_linux32)
  Yac_config = release_linux32

else ifeq ($(config),release_linux64)
  Yac_config = release_linux64

else ifeq ($(config),dist_win32)
  Yac_config = dist_win32

else ifeq ($(config),dist_win64)
  Yac_config = dist_win64

else ifeq ($(config),dist_linux32)
  Yac_config = dist_linux32

else ifeq ($(config),dist_linux64)
  Yac_config = dist_linux64

else
  $(error "invalid configuration $(config)")
endif

PROJECTS := Yac

.PHONY: all clean help $(PROJECTS) 

all: $(PROJECTS)

Yac:
ifneq (,$(Yac_config))
	@echo "==== Building Yac ($(Yac_config)) ===="
	@${MAKE} --no-print-directory -C Projects/Yac -f Makefile config=$(Yac_config)
endif

clean:
	@${MAKE} --no-print-directory -C Projects/Yac -f Makefile clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  debug_win32"
	@echo "  debug_win64"
	@echo "  debug_linux32"
	@echo "  debug_linux64"
	@echo "  release_win32"
	@echo "  release_win64"
	@echo "  release_linux32"
	@echo "  release_linux64"
	@echo "  dist_win32"
	@echo "  dist_win64"
	@echo "  dist_linux32"
	@echo "  dist_linux64"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   Yac"
	@echo ""
	@echo "For more information, see https://github.com/premake/premake-core/wiki"